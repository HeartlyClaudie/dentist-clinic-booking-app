version: '3.8'

services:
  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "3001:3000"
    networks:
      - clinic-network
    volumes:
      - ./user-service/logs:/app/logs

  booking-service:
    build: ./booking-service
    container_name: booking-service
    ports:
      - "3002:3000"
    depends_on:
      - user-service
      - mongodb-booking
    environment:
      - MONGO_URI=mongodb://mongodb-booking:27017/bookingdb
    networks:
      - clinic-network
    volumes:
      - ./booking-service/logs:/app/logs

  product-service:
    build: ./product-service
    container_name: product-service
    ports:
      - "3003:3000"
    depends_on:
      - postgres-product
    environment:
      - DB_HOST=postgres-product
      - DB_PORT=5432
      - DB_NAME=productdb
      - DB_USER=admin
      - DB_PASS=password
    networks:
      - clinic-network
    volumes:
      - ./product-service/logs:/app/logs

  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "3004:3004"
    networks:
      - clinic-network
    volumes:
      - ./notification-service/logs:/app/logs

  mongodb-booking:
    image: mongo:6.0
    container_name: mongodb-booking
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_booking_data:/data/db
    networks:
      - clinic-network

  postgres-product:
    image: postgres:15
    container_name: postgres-product
    restart: always
    environment:
      POSTGRES_DB: productdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_product_data:/var/lib/postgresql/data
    networks:
      - clinic-network

networks:
  clinic-network:

volumes:
  mongodb_booking_data:
  postgres_product_data:
